- traemos filesystem
- traemos crypto para codigo hexadecimal (forma en la q guardamos id en mongo)

Armamos Class NotesManager
en constructor introducimos 2 cosas que se van a ejecutar automaticamente al crear la instancia:

1. se define el path del archivo JSON
2. init para determinar si el path/archivo existe:
    . var exists y se le asigna el existsSync (sync-bloc) chequeando el path ... retorna boolean
    . si no existe, se inicializa el archivo con un array vacío, sin filter y con 4 de margen.
    (usando writeFileSync por sincrono)
    . si existe, se sigue con las otras tareas


MÉTODOS sobre formato async-await:

método create() 

- si no hay data de texto, se crea un error y se throwea (agarrado por el catch)

- si hay data de texto, se prosigue...
 . se crea la NUEVA NOTA
    . id con crypto
    .texto
    .date ingresada o actual por defecto

- variable allNotes para guardar el ARRAY ENTERO
   . readFile() para traerlo
   . parseamos allNotes
   . le pusheamos la nota nueva
   . stringifyamos allNotes actualizado sin filtro y con 4 de margen
   
   . writeFile para enviar(path, archivo)
   . retorna la nota creada.

   
   
   
   .catch por posible error, el que se throwea




READ()

    . en variable allNotes guardo el array de notas, lo traigo con readFile()
    . parseo allNotes
    . console log y return
    .catch por posible error.



READONE(id)

    . en variable allNotes guardo el array de notas, lo traigo con readFile()
    . parseo allNotes
    . declaro SELECTED, asignandole la nota que coincida con el ID introducido.
    . si selected no existe, va error

    . si existe, se consologuea y retorna.

    . catch por posible error.





DESTROYONE(id)

    . en variable allNotes guardo el array de notas, lo traigo con readFile()
    . parseo allNotes
    . declaro SELECTED, asignandole la nota que coincida con el ID introducido.
    . si selected no existe, va error


    . si existe:
    . declaro withoutSelected y le asigno el array actualizado sin la nota que coincide con el ID.
    . lo stringyfeo sin filtro y con 4 de margen
    . sobreescribo el array
    . console logs y return

    .catch








TESTING

    . función asíncrona test() -para manejar si existe error.

    . en variable notes se crea una nueva instancia de NotesManager()

    . NOTES.METHOD() para ejecutar las posibles acciones:
        .notes.create({ text:'' })
        .notes.read()
        .notes.readOne('id')
        .notes.destroyOne('id')




NOTA: si queda el array vacio, borrarlo porq sino se bugea.
o, en el mejor de los casos introducir un condicional en el init para caso en el q haya array vacío.